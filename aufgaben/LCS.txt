# Learning Classifier System
Strategie im Maschinellen Lernen, zuerst beschrieben von John Holland.

Es gibt zu Beginn mehrere Regeln, die evolutionär verändert werden (s.u.). Die Güte der Regeln wird mit Reinforcement Learning bestimmt (s.u.).

- Verstärkendes Lernen: Mit Hilfe von Markov-Entscheidungsproblemen Belohnungen so auf vorangegangene Aktionen verteilen, dass jede den korrekten Anteil erhält.
- Evolutionärer Algorithmus: Beginn mit vielen zufälligen "Lösungen", die mit den Regeln der Evolution verändert werden, um ein gutes Ergebnis zu erhalten.

Zwei Typen:

- Pittsburgh: Regelmengen werden "evolutioniert"
- Michigan (Standard): einzelne Regeln werden "evolutioniert"

## Funktionsweise

Classifier: Bedingungs-Aktions-Paare, mit einer Vorhersage über den erwarteten Payoff der Aktion

- LCS erhält eine Eingabe, meist in Form mehrerer Zahlenwerte
- LCS wählt die Classifier, deren Bedingung von der Eingabe erfüllt wird (*match set*)
- es bestimmt für jede Aktion den durchschnittlichen Ertrag, den die Classifier versprechen (p) und gewichtet ihn mit der Zuverlässigkeit der Vorhersage (z)
- die Aktion mit dem höchsten Ertrag wird als Reaktion auf die Eingabe ausgewählt und ausgeführt
- die Umgebung gibt Rückmeldung P (Payoff/Ertrag)
- alle Classifier, die die ausgeführte Aktion vorschlugen (*action set*), werden verändert:
  - die Ertragsvorhersage p wird an P angenähert
  - die Abweichungszahl e wird an den absoluten Fehler |p-P| angenähert
  - die Zuverlässigkeit z wird aktualisiert (grob gesagt das Inverse von e)


## Evolution

Die Entwicklung ist nicht auf die Anpassung von Werten innerhalb eines Classifiers beschränkt. Vielmehr werden zuverlässige Regeln dupliziert und dabei verändert (Mutation und Kreuzung). Es können etwa pro Runde zwei Regeln kopiert und verändert werden, die dann die zwei schlechtesten Regeln ersetzen.

Dadurch verändern sich auch die Bedingungen der Classifier. Da allgemeinere Bedingungen häufiger vorkommen und daher auch häufiger positiv bewertet werden, geht der Trend zu allgemeinen, aber genauen Classifiern. Auf diese Weise reduziert sich die Zahl der Classifier, da alle zum Optimum streben und sich einandern angleichen.

Nicht erwähnt: Aufgaben mit mehreren Schritten, Rauschen, Lernen von Zusammenhängen, on-line.

